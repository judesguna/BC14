OBJECT Codeunit 72005 Salary Posting
{
  OBJECT-PROPERTIES
  {
    Date=30-07-14;
    Time=12:42:38;
    Modified=Yes;
    Version List=FRHRPR4.00.03.06;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=Pay Element - %1 is not found in Payelement Master';
      Text002@1000000003 : TextConst 'ENU=General Posting Group is not defined for Business Posting Group %1 %2';
      Text003@1000000004 : TextConst 'ENU=Business Posting %1 is not defined in Business Posting Group Master';
      HRPayrollSetup@1000000013 : Record 72051;
      LocationHRPayrollSetup@1000000018 : Record 72052;
      PayElements@1000000008 : Record 72060;
      Employee@1000000006 : Record 5200;
      PayrollBusinessPostingGroup@1000000007 : Record 72074;
      PayrollProductPostingGroup@1000000009 : Record 72075;
      PayrollGeneralPostingSetup@1000000005 : Record 72076;
      Text004@1000000010 : TextConst 'ENU="G/L Account Not defined in Payroll General Posting %1 %2 "';
      PayrollEmployeePostingGroup@1000000011 : Record 72077;
      GenJournalLine@1000000012 : Record 81;
      PayDate@1000000014 : Date;
      BusinessPosting@1000000002 : Code[20];
      ProductPosting@1000000001 : Code[20];
      LocationCode@1000000015 : Code[20];
      SalaryPlanCode@1000000016 : Code[20];
      SalaryCyclicCode@1000000017 : Code[20];

    PROCEDURE Posting@1000000000(MonthlyAttendance@1000000000 : Record 72082);
    VAR
      ProcessedSalary@1000000001 : Record 72090;
      "AccountNo."@1000000002 : Code[20];
      AcctType@1000000003 : 'G/L Account,Bank Account';
    BEGIN
      Employee.GET(MonthlyAttendance."Employee No");
      Employee.TESTFIELD("Pay Bus. Posting Group");
      Employee.TESTFIELD("Emp Posting Group");

      LocationCode := MonthlyAttendance."Location Code";
      SalaryPlanCode := MonthlyAttendance."Salary Plan Code";
      SalaryCyclicCode := MonthlyAttendance."Salary Cycle Code";

      BusinessPosting := Employee."Pay Bus. Posting Group";

      HRPayrollSetup.GET(USERID);
      LocationHRPayrollSetup.GET(HRPayrollSetup."Location Code");

      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", LocationCode);
      ProcessedSalary.SETRANGE("Salary Plan Code", SalaryPlanCode);
      ProcessedSalary.SETRANGE("Salary Cycle Code", SalaryCyclicCode);
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE(Loan, FALSE);
      IF ProcessedSalary.FINDSET THEN
        REPEAT
          CASE ProcessedSalary."Pay Type" OF

            ProcessedSalary."Pay Type"::Addition,ProcessedSalary."Pay Type"::Reimbursement :
              IF NOT PayElements.GET(ProcessedSalary."Pay Element Code",LocationCode,SalaryPlanCode) THEN
                ERROR(Text001,ProcessedSalary."Pay Element Code")
              ELSE BEGIN
                PayElements.TESTFIELD("Pay Prod. Posting Group");
                IF NOT PayrollBusinessPostingGroup.GET(Employee."Pay Bus. Posting Group",LocationCode,SalaryPlanCode) THEN
                  ERROR(Text003,Employee."Pay Bus. Posting Group")
                ELSE
                  IF NOT PayrollGeneralPostingSetup.GET(PayrollBusinessPostingGroup.Code,
                      PayElements."Pay Prod. Posting Group",
                      LocationCode,SalaryPlanCode)
                  THEN
                    ERROR(Text002,PayrollBusinessPostingGroup.Code,PayElements."Pay Prod. Posting Group");
              END;

            ProcessedSalary."Pay Type"::Deduction :
              IF (ProcessedSalary."Pay Element Code" <> 'PF') AND (ProcessedSalary."Pay Element Code" <> 'ESI') AND
                 (ProcessedSalary."Pay Element Code" <> 'TDS') AND (ProcessedSalary."Pay Element Code" <> 'PT')
              THEN
                IF NOT PayElements.GET(ProcessedSalary."Pay Element Code",LocationCode,SalaryPlanCode) THEN
                  ERROR(Text001,ProcessedSalary."Pay Element Code")
                ELSE BEGIN
                  PayElements.TESTFIELD("Pay Prod. Posting Group");
                  IF NOT PayrollBusinessPostingGroup.GET(Employee."Pay Bus. Posting Group",LocationCode,SalaryPlanCode) THEN
                    ERROR(Text003,Employee."Pay Bus. Posting Group")
                  ELSE BEGIN
                    IF NOT PayrollGeneralPostingSetup.GET(PayrollBusinessPostingGroup.Code,
                       PayElements."Pay Prod. Posting Group",
                       LocationCode,SalaryPlanCode) THEN
                      ERROR(Text002,PayrollBusinessPostingGroup.Code,PayElements."Pay Prod. Posting Group");
                  END;
                END;
          END;
        UNTIL ProcessedSalary.NEXT = 0;

      // Finding the Debit Account & Credit Accounts for Additions & Deductions
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", LocationCode);
      ProcessedSalary.SETRANGE("Salary Plan Code", SalaryPlanCode);
      ProcessedSalary.SETRANGE("Salary Cycle Code", SalaryCyclicCode);
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE(Loan, FALSE);
      IF ProcessedSalary.FINDSET THEN
        REPEAT
          CASE ProcessedSalary."Pay Type" OF
            ProcessedSalary."Pay Type"::Addition,ProcessedSalary."Pay Type"::Reimbursement :
              BEGIN
                PayElements.GET(ProcessedSalary."Pay Element Code",LocationCode,SalaryPlanCode);
                PayrollProductPostingGroup.GET(PayElements."Pay Prod. Posting Group",LocationCode,SalaryPlanCode);

                ProductPosting := PayrollProductPostingGroup.Code;
                PayrollGeneralPostingSetup.GET(BusinessPosting,ProductPosting,LocationCode,SalaryPlanCode);

                IF PayrollGeneralPostingSetup."G/L Code" = '' THEN
                  ERROR(Text004,PayrollGeneralPostingSetup."Pay Bus.Posting Group",
                  PayrollGeneralPostingSetup."Pay Prod. Posting Group");
                ProcessedSalary."Account No." := PayrollGeneralPostingSetup."G/L Code";
                ProcessedSalary.MODIFY;

                InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",
                  MonthlyAttendance."Journal Batch Name",MonthlyAttendance."Posted Document No",
                  MonthlyAttendance."Posted Date",PayrollGeneralPostingSetup."G/L Code",AcctType,ProcessedSalary."Payable Amount");
              END;

            ProcessedSalary."Pay Type"::Deduction :
              IF (ProcessedSalary."Pay Element Code" <> 'PF') AND (ProcessedSalary."Pay Element Code" <> 'ESI')
                 AND (ProcessedSalary."Pay Element Code" <> 'TDS') AND
                 (ProcessedSalary."Pay Element Code" <> 'PT') AND
                 (ProcessedSalary."Pay Element Code" <> 'LOAN')
              THEN BEGIN
                PayElements.GET(ProcessedSalary."Pay Element Code",LocationCode,SalaryPlanCode);
                PayrollProductPostingGroup.GET(PayElements."Pay Prod. Posting Group",LocationCode,SalaryPlanCode);
                ProductPosting := PayrollProductPostingGroup.Code;
                PayrollGeneralPostingSetup.GET(BusinessPosting,ProductPosting,LocationCode,SalaryPlanCode);
                IF PayrollGeneralPostingSetup."G/L Code" = '' THEN
                  ERROR(Text004,PayrollGeneralPostingSetup."Pay Bus.Posting Group",
                    PayrollGeneralPostingSetup."Pay Prod. Posting Group");
                ProcessedSalary."Account No." := PayrollGeneralPostingSetup."G/L Code";
                ProcessedSalary.MODIFY;
                InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",
                MonthlyAttendance."Journal Batch Name",MonthlyAttendance."Posted Document No",
                MonthlyAttendance."Posted Date",PayrollGeneralPostingSetup."G/L Code",AcctType,
                  -ProcessedSalary."Payable Amount");
              END;
          END;
        UNTIL ProcessedSalary.NEXT = 0;

      // EMPLOYER ESI CONTRIBUTION

      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Element Code", 'ESI');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        LocationHRPayrollSetup.TESTFIELD("Employer ESI GL Code");
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",LocationHRPayrollSetup."Employer ESI GL Code",AcctType,
        ProcessedSalary."Employer PF / ESI Amount");
      END;

      // EMPLOYER EPS CONTRIBUTION
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'PF');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        LocationHRPayrollSetup.TESTFIELD("Employer EPS GL Code");
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",LocationHRPayrollSetup."Employer EPS GL Code",AcctType,
        ProcessedSalary."Employer EPS Amount");
      END;

      // EMPLOYER PF CONTRIBUTION,PF ADMIN CHARGES , ELDI CHARGES, RIFA CHARGES
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'PF');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
      // EMPLOYER PF
        LocationHRPayrollSetup.TESTFIELD("Employer PF GL Code");
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",LocationHRPayrollSetup."Employer PF GL Code",AcctType,
        ProcessedSalary."Employer PF / ESI Amount");

      // PF ADMIN CHARGES

        LocationHRPayrollSetup.TESTFIELD("PF Admin Charges GL Code");
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",LocationHRPayrollSetup."PF Admin Charges GL Code",
          AcctType,
        ProcessedSalary."PF Admin Charges Amount");

      // ELDI CHARGES
        LocationHRPayrollSetup.TESTFIELD("EDLI Charges GLCode");
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",LocationHRPayrollSetup."EDLI Charges GLCode",AcctType,
        ProcessedSalary."PF EDLI Amount");

      // RIFA CHARGES
        LocationHRPayrollSetup.TESTFIELD("RIFA Charges GL Code");
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",LocationHRPayrollSetup."RIFA Charges GL Code",AcctType,
        ProcessedSalary."PF RIFA Amount");
      END;

      Deductions(MonthlyAttendance);
    END;

    PROCEDURE InitGenJnlLine@1000000005(VAR ProcessedSalary@1000000000 : Record 72090;JournalTemplate@1000000007 : Code[20];JournalBatch@1000000006 : Code[20];"DocumentNo."@1000000005 : Code[20];PostingDate@1000000004 : Date;"AccountNo."@1000000003 : Code[20];AccountType@1000000002 : 'G/L Account,Bank Account';Amount@1000000001 : Decimal);
    VAR
      GenJnlPostLine@1000000008 : Codeunit 12;
      JnlDim@1000000009 : Record 356;
    BEGIN
      IF Amount <> 0 THEN BEGIN
        PayElements.GET(ProcessedSalary."Pay Element Code",LocationCode,SalaryPlanCode);
        GenJournalLine.INIT;
        GenJournalLine."Journal Template Name" := JournalTemplate;
        GenJournalLine."Journal Batch Name" := JournalBatch;
        GenJournalLine."Line No." += 10000;
        GenJournalLine."Account Type" := AccountType;
        GenJournalLine.VALIDATE("Account No.","AccountNo.");
        GenJournalLine."Posting Date" := PostingDate;
        GenJournalLine."Document No." := "DocumentNo.";
        GenJournalLine.Description := ProcessedSalary."Employee No" + '+' + PayElements.Description + '+' + SalaryCyclicCode;
        GenJournalLine."Bal. Account Type" := AccountType;
        GenJournalLine.VALIDATE(Amount,Amount);
        GenJournalLine."Source Code" := 'GENJNL';
        GenJournalLine."Employee No." := ProcessedSalary."Employee No";
        GenJournalLine.INSERT;
      END;
    END;

    PROCEDURE Deductions@1000000020(MonthlyAttendance@1000000000 : Record 72082);
    VAR
      ProcessedSalary@1000000001 : Record 72090;
      Additions@1000000002 : Decimal;
      Deductions@1000000003 : Decimal;
      AccountType@1000000004 : 'G/L Account';
    BEGIN
      PayrollEmployeePostingGroup.GET(Employee."Emp Posting Group",LocationCode,SalaryPlanCode);

      // PF Account
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'PF');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        PayrollEmployeePostingGroup.TESTFIELD("PF Payable A/c");
        ProcessedSalary."Account No." := PayrollEmployeePostingGroup."PF Payable A/c";
        ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
          MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."PF Payable A/c", AccountType,-(ProcessedSalary."Employee PF / ESI Amount" +
          ProcessedSalary."Employer PF / ESI Amount"));
      END;

      // EPS Account
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'PF');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        PayrollEmployeePostingGroup.TESTFIELD("EPS Payable A/c");
        ProcessedSalary."Account No." := PayrollEmployeePostingGroup."EPS Payable A/c";
        ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
         MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."EPS Payable A/c", AccountType,- ProcessedSalary."Employer EPS Amount");
      END;

      // PT PAYABLE ACCOUNT
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'PT');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        PayrollEmployeePostingGroup.TESTFIELD("PT Payable A/c");
        ProcessedSalary."Account No." := PayrollEmployeePostingGroup."PT Payable A/c";
        ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
          MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."PT Payable A/c", AccountType,- ProcessedSalary."Payable Amount");
      END;

      // ESI Account
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'ESI');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        PayrollEmployeePostingGroup.TESTFIELD("ESI Payable A/c");
        ProcessedSalary."Account No." := PayrollEmployeePostingGroup."ESI Payable A/c";
        ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
          MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."ESI Payable A/c",AccountType,- (ProcessedSalary."Employee PF / ESI Amount" +
          ProcessedSalary."Employer PF / ESI Amount"));
      END;

      // TDS Account
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'TDS');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        PayrollEmployeePostingGroup.TESTFIELD("TDS Payable A/c");
        ProcessedSalary."Account No." := PayrollEmployeePostingGroup."TDS Payable A/c";
        ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
          MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."TDS Payable A/c",AccountType,-ProcessedSalary."Payable Amount");
      END;

      // BONUS Account
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'BONUS');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        PayrollEmployeePostingGroup.TESTFIELD("Bonus Payable A/c");
        ProcessedSalary."Account No." := PayrollEmployeePostingGroup."Bonus Payable A/c";
        ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
          MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."Bonus Payable A/c",AccountType,- ProcessedSalary."Payable Amount");
      END;

      // LOAN Account
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'LOAN');
      IF ProcessedSalary.FINDSET THEN
        REPEAT
          PayElements.GET(ProcessedSalary."Pay Element Code",LocationCode,SalaryPlanCode);
          PayElements.TESTFIELD("GL Code");
          ProcessedSalary."Account No." := PayElements."GL Code";
          ProcessedSalary.MODIFY;
          InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
            MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
            PayElements."GL Code",AccountType,-ProcessedSalary."Payable Amount");
        UNTIL ProcessedSalary.NEXT = 0;

      // Salary Payable Account
      Additions := 0;
      Deductions := 0;
      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      IF ProcessedSalary.FINDSET THEN
        REPEAT
          CASE ProcessedSalary."Pay Type" OF
            ProcessedSalary."Pay Type"::Addition,ProcessedSalary."Pay Type"::Reimbursement :

              IF ProcessedSalary."Payment Type" IN [ProcessedSalary."Payment Type"::"Full Payment",
                 ProcessedSalary."Payment Type"::"First Payment"]
              THEN
                Additions := Additions + ProcessedSalary."Payable Amount";
            ProcessedSalary."Pay Type"::Deduction :
              Deductions := Deductions + ProcessedSalary."Payable Amount";
          END;
        UNTIL ProcessedSalary.NEXT = 0;

      InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
        PayrollEmployeePostingGroup."Salary Payable1 A/c",
        AccountType,-(Additions-Deductions));

      Additions := 0;
      Deductions := 0;

      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      IF ProcessedSalary.FINDSET THEN
        REPEAT
          CASE ProcessedSalary."Pay Type" OF
            ProcessedSalary."Pay Type"::Addition,ProcessedSalary."Pay Type"::Reimbursement :

              IF ProcessedSalary."Payment Type" = ProcessedSalary."Payment Type"::"Second Payment" THEN
                Additions := Additions + ProcessedSalary."Payable Amount";
          END;
        UNTIL ProcessedSalary.NEXT = 0;

      InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
        MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
        PayrollEmployeePostingGroup."Salary Payable2 A/c",
        AccountType, - Additions);

      // PF ADMIN CHARGES , ELDI CHARGES, RIFA CHARGES

      ProcessedSalary.RESET;
      ProcessedSalary.SETRANGE("Location Code", MonthlyAttendance."Location Code");
      ProcessedSalary.SETRANGE("Salary Plan Code", MonthlyAttendance."Salary Plan Code");
      ProcessedSalary.SETRANGE("Salary Cycle Code", MonthlyAttendance."Salary Cycle Code");
      ProcessedSalary.SETRANGE("Employee No", MonthlyAttendance."Employee No");
      ProcessedSalary.SETRANGE("Pay Type", ProcessedSalary."Pay Type"::Deduction);
      ProcessedSalary.SETRANGE("Pay Element Code", 'PF');
      IF ProcessedSalary.FINDFIRST THEN BEGIN
        PayrollEmployeePostingGroup.TESTFIELD("PF Admin Charge Payable A/c");
      //  ProcessedSalary."Account No.":=EmpPostingSetup."PF Admin Charge Payable A/c";
      //  ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
         MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
         PayrollEmployeePostingGroup."PF Admin Charge Payable A/c",AccountType,
        -ProcessedSalary."PF Admin Charges Amount");

        PayrollEmployeePostingGroup.TESTFIELD("EDLI Payable A/c");
      //  ProcessedSalary."Account No.":=EmpPostingSetup."EDLI Payable A/c";
      //  ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
          MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."EDLI Payable A/c",AccountType,
         - ProcessedSalary."PF EDLI Amount");

        PayrollEmployeePostingGroup.TESTFIELD("RIFA Payable A/c");
        ProcessedSalary."Account No." := PayrollEmployeePostingGroup."RIFA Payable A/c";
        ProcessedSalary.MODIFY;
        InitGenJnlLine(ProcessedSalary,MonthlyAttendance."Journal Template Name",MonthlyAttendance."Journal Batch Name",
          MonthlyAttendance."Posted Document No",MonthlyAttendance."Posted Date",
          PayrollEmployeePostingGroup."RIFA Payable A/c",AccountType,
        - ProcessedSalary."PF RIFA Amount");
      END;
    END;

    BEGIN
    {
      -----------------------------------------------------------------------------------------------
      Firstware Sofware Solutions : Project Name : HR & PAYROLL
      -----------------------------------------------------------------------------------------------
      No.  Date          Developer     Spec/CU/CR      Description
      -----------------------------------------------------------------------------------------------
      1    04.APR.2009   RAJAH.A                       New Codeunit Created for PAYROLL Module
      -----------------------------------------------------------------------------------------------
    }
    END.
  }
}

