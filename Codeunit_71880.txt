OBJECT Codeunit 71880 Education Vertical
{
  OBJECT-PROPERTIES
  {
    Date=31-07-14;
    Time=02:33:54;
    Modified=Yes;
    Version List=EDU3.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      EduSetup@1102155000 : Record 71884;
      Text001@1102155001 : TextConst 'ENU=Do you want to receive this Application %1?';
      RecApplication@1102155002 : Record 71002;
      Academics@1102155003 : Codeunit 71040;
      AcademicsCOLLEGE@1102155004 : Codeunit 71350;
      Text000@1102155005 : TextConst 'ENU=Academic Year Already Closed';
      Text002@1102155006 : TextConst 'ENU=Academic Year Has Been Assigned';
      Text003@1102155007 : TextConst 'ENU=Do you want to Close the academic Year ?';
      Text004@1102155008 : TextConst 'ENU=Do you want to Assign the academic Year ?';
      Ret@1000000000 : Code[20];

    PROCEDURE GetAcademicYear@1102155000() : Code[10];
    BEGIN
      // Start 01.Kathir
      EduSetup.GET;
      EduSetup.TESTFIELD("Academic Year");
      EXIT(EduSetup."Academic Year")
      // Stop 01.Kathir
    END;

    PROCEDURE GetAdmissionYear@1102155001() : Code[10];
    VAR
      Admission@1102155000 : Record 71000;
    BEGIN
      // Start 02.Kathir
      Admission.GET;
      Admission.TESTFIELD("Admission Year");
      EXIT(Admission."Admission Year");
      // Stop 02.Kathir
    END;

    PROCEDURE GetAdmissionYearCOLLEGE@1102155002() : Code[10];
    VAR
      AdmissionSetup@1102155000 : Record 71270;
    BEGIN
      // Start 04.VIGNESH
      AdmissionSetup.GET;
      AdmissionSetup.TESTFIELD("Admission Year");
      EXIT(AdmissionSetup."Admission Year");
      // Stop 04.VIGNESH
    END;

    PROCEDURE RankGeneration@1102155004("getFirstNo."@1102155003 : Code[20];"getLastNo."@1102155005 : Code[20]);
    VAR
      RankGeneration@1102155000 : Record 71894;
      RankGeneration1@1102155001 : Record 71894;
      SetRank@1102155004 : Integer;
      Countrank@1102155006 : Integer;
    BEGIN
      // Start 03.VIGNESH
      SetRank := 1;
      RankGeneration.RESET;
      RankGeneration.SETRANGE("Entry No.","getFirstNo.","getLastNo.");
      RankGeneration.MODIFYALL(Rank,0);

      RankGeneration.RESET;
      RankGeneration.SETCURRENTKEY(Average);
      RankGeneration.SETRANGE("Entry No.","getFirstNo.","getLastNo.");
      RankGeneration.ASCENDING(FALSE);
      IF RankGeneration.FINDFIRST THEN
        REPEAT
          RankGeneration1.RESET;
          RankGeneration1.SETRANGE("Entry No.","getFirstNo.","getLastNo.");
          RankGeneration1.SETRANGE(Average,RankGeneration.Average);
          RankGeneration1.SETRANGE(Rank,0);
          Countrank := RankGeneration1.COUNT ;
          RankGeneration1.MODIFYALL(Rank,SetRank);
          IF Countrank <> 0 THEN
            SetRank := Countrank + SetRank;
        UNTIL RankGeneration.NEXT = 0;
      // Stop 03.VIGNESH
    END;

    PROCEDURE CloseAcademicYear@1102155003(AcaYear@1102155001 : Code[10]);
    VAR
      AcademicYear@1102155000 : Record 71904;
    BEGIN
      // Start 05.ABK
      IF CONFIRM(Text003) THEN BEGIN
        AcademicYear.GET(AcaYear);
        AcademicYear.Closed := TRUE;
        AcademicYear.MODIFY;
      END;
      // Stop 05.ABK
    END;

    PROCEDURE AssignAcademicYear@1102155005(AcademicCode@1102155001 : Code[20]);
    VAR
      AcademicYear@1102155000 : Record 71904;
      EducationSetup@1102155002 : Record 71884;
    BEGIN
      // Start 06.ABK
      AcademicYear.GET(AcademicCode);
      IF AcademicYear.Closed THEN
        ERROR(Text000);

      IF CONFIRM(Text004) THEN BEGIN
        EducationSetup.GET;
        EducationSetup.TESTFIELD(Company);
        EducationSetup."Academic Year" := AcademicYear.Code;
        EducationSetup."Start Date" := AcademicYear."Start Date";
        EducationSetup."End Date" := AcademicYear."End Date";
        EducationSetup.MODIFY;
        MESSAGE(Text002);
      END;
      // Stop 06.ABK
    END;

    PROCEDURE CopyGrades@1102155006();
    BEGIN
      EduSetup.GET;
      EduSetup.TESTFIELD(Company);
      IF EduSetup.Company = EduSetup.Company::School THEN
        Academics."Copy Grades"
      ELSE
        IF EduSetup.Company = EduSetup.Company::College THEN
          AcademicsCOLLEGE.CopyGrades;
    END;

    PROCEDURE GetClassCode@1000000000(StudentNo@1000000000 : Code[20];AcademicYear@1000000001 : Code[20]) ret : Code[20];
    VAR
      PromotionHistory@1000000002 : Record 71060;
    BEGIN
      PromotionHistory.RESET;
      PromotionHistory.SETRANGE(PromotionHistory."Student No.",StudentNo);
      PromotionHistory.SETRANGE(PromotionHistory."Academic Year",AcademicYear);
      IF PromotionHistory.FINDFIRST THEN
        EXIT(PromotionHistory."Class Code");
    END;

    BEGIN
    {
         No     Date         Sign          Trigger                     Description
      -----------------------------------------------------------------------------------------------
        01     18/09/09     KATHIR      GetAcademicYear()         Function added to get academic year
        02     25.09.09     VIGNESH     GetAdmissionYearCOLLEGE() Function Added to get admission Year for College
        03     03.10.09     VIGNESH     RankSelection()           Function added to create Rank Generation
        04     03/10/09     VIGNESH     GetAdmissionYear()        Function added to get admission year
        05     30/12/09       ABK       CloseAdmissionYear()      Function added to close the previous admission year
        06     03/10/09       ABK       AssignAdmissionYear()     Function added to assign the current admission year
        07     03/10/09       ABK       GetCBCSBatch()            Function added to get the current CBCS Batch
    }
    END.
  }
}

