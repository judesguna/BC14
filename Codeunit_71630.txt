OBJECT Codeunit 71630 Library Transactions
{
  OBJECT-PROPERTIES
  {
    Date=30-07-14;
    Time=11:25:27;
    Modified=Yes;
    Version List=EDU3.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      BookTransRec@1102155000 : Record 71632;
      AccessionRec@1102155001 : Record 71631;
      LibrarySetup@1102155002 : Record 71633;
      IntDays@1102155005 : Integer;
      VarFine@1102155004 : Decimal;
      VarStaff@1102155003 : Decimal;
      ItemRec@1102155006 : Record 27;
      BookRec@1102155007 : Record 71630;
      BookTr@1102155008 : Record 71632;
      IntMaxBook@1102155009 : Integer;
      IntCount@1102155010 : Integer;
      PurchLineRec@1102155012 : Record 39;
      i@1000000000 : Integer;
      AdvBook@1102155011 : Record 71635;
      EducationSetup@1102155013 : Record 71884;
      LibrarySetupClassWise@1102155014 : Record 71636;
      LibrarySetupCourseWise@1102155015 : Record 71637;
      Student@1102155016 : Record 71046;
      StudentCOLLEGE@1102155017 : Record 71355;
      Text000@1102155018 : TextConst 'ENU=Select Company';
      Text001@1102155019 : TextConst 'ENU=Please Enter Maximum No. of Books for the Staff';
      Text002@1102155020 : TextConst 'ENU=Please Enter Maximum No. of Books for the Students';
      Text003@1102155021 : TextConst 'ENU=Please enter Total No of Books Eligible for Class %1';
      Text004@1102155022 : TextConst 'ENU=Please enter Total No of Books Eligible for Course %1';
      Text005@1102155023 : TextConst 'ENU=Books Issued Successfully';
      Text006@1102155024 : TextConst 'ENU=Max Limit for Issuing is over';
      Text007@1102155025 : TextConst 'ENU=Books Returned Successfully';
      Text008@1102155026 : TextConst 'ENU=you cannot return the book unless you pay the fine';
      Text009@1102155027 : TextConst 'ENU=Item Created Successfully';
      Text010@1102155028 : TextConst 'ENU=Advance Booking completed';
      Text011@1102155029 : TextConst 'ENU=Enter the Fine Amount For Students';
      Text012@1102155030 : TextConst 'ENU=Enter the Fine Amount For Staff';
      Text013@1102155031 : TextConst 'ENU=Fine already paid';
      Text014@1102155032 : TextConst 'ENU=Fees Generated';
      Text015@1102155033 : TextConst 'ENU=Maximum No of Renewal Has To Be Assigned';
      Text016@1102155034 : TextConst 'ENU=Maximum Renewal Has Been Exceeded';
      Text017@1102155035 : TextConst 'ENU=Book Renewed Successfully';
      AccessNo@1102155036 : Code[20];

    PROCEDURE "Book Issue"@1102155000("EntryNo."@1102155000 : Integer);
    BEGIN
      // Start 01.VIGNESH
      CLEAR(IntCount);

      EducationSetup.GET;
      IF EducationSetup.Company = EducationSetup.Company::" " THEN
        ERROR(Text000);

      LibrarySetup.GET;
      IF LibrarySetup."No. of Books - Staffs" = 0 THEN
        ERROR(Text001);

      IF BookTransRec.GET("EntryNo.") THEN BEGIN
        BookTransRec.TESTFIELD("No.");
        BookTransRec.TESTFIELD("Accession No.");
        BookTransRec.TESTFIELD("Date of Issue");
        BookTransRec.TESTFIELD("Date of Return");
        BookTr.RESET;
        BookTr.SETCURRENTKEY("No.","Transaction Status");
        BookTr.SETRANGE("No.",BookTransRec."No.");
        BookTr.SETRANGE("Transaction Status",BookTr."Transaction Status"::Issued);
        IntCount := BookTr.COUNT;
        IF BookTransRec.Type = BookTransRec.Type::Student THEN BEGIN
          IF EducationSetup.Company = EducationSetup.Company::School THEN BEGIN
            IF Student.GET(BookTransRec."No.") THEN BEGIN
              IF LibrarySetupClassWise.GET(Student.Class) THEN BEGIN
                IF LibrarySetupClassWise."No. of Books - Students" <> 0 THEN
                  IntMaxBook := LibrarySetupClassWise."No. of Books - Students"
                ELSE
                  ERROR(Text002);
              END ELSE
                ERROR(Text003,Student.Class);
            END;
          END ELSE
            IF EducationSetup.Company = EducationSetup.Company::College THEN BEGIN
              IF StudentCOLLEGE.GET(BookTransRec."No.") THEN BEGIN
                IF LibrarySetupCourseWise.GET(StudentCOLLEGE."Course Code") THEN BEGIN
                  IF LibrarySetupCourseWise."No. of Books - Students" <> 0 THEN
                    IntMaxBook := LibrarySetupCourseWise."No. of Books - Students"
                  ELSE
                    ERROR(Text002);
                END ELSE
                  ERROR(Text004,StudentCOLLEGE."Course Code");
              END;
            END;
        END ELSE
          IF BookTransRec.Type = BookTransRec.Type::Staff THEN
            IntMaxBook := LibrarySetup."No. of Books - Staffs";

      // Start 09.GUNA
        IF AccessionRec.GET(BookTransRec."Book No.",BookTransRec."Accession No.") THEN BEGIN
          AccessionRec.Booked := TRUE;
          AccessionRec.MODIFY;
        END;
      // Stop 09.GUNA
        IF IntCount < IntMaxBook THEN BEGIN
          BookTransRec."Transaction Status" := BookTransRec."Transaction Status"::Issued;
          BookTransRec."Entry Type" := BookTransRec."Entry Type"::Issue;
          BookTransRec.MODIFY;
          MESSAGE(Text005);
        END ELSE
          ERROR(Text006);
      END;
      // Stop 01.VIGNESH
    END;

    PROCEDURE "Book Return"@1102155001("EntryNo."@1102155000 : Integer);
    BEGIN
      // Start 07.VIGNESH
      BookTransRec.GET("EntryNo.");
      BookTransRec.TESTFIELD("Actual Date of Return");
      IF ((BookTransRec."Fine Amount" = 0) OR ((BookTransRec."Fine Amount" <> 0 ) AND BookTransRec.Invoiced)) THEN BEGIN
        AccessionRec.GET(BookTransRec."Book No.",BookTransRec."Accession No.");
        AccessionRec.Booked := FALSE;
        AccessionRec.MODIFY;
        BookTransRec."Transaction Status" := BookTransRec."Transaction Status"::Returned;
        BookTransRec.MODIFY;
        MESSAGE(Text007);
      END ELSE
        MESSAGE(Text008);
      // Stop 07.VIGNESH
    END;

    PROCEDURE "Book Creation"@1102155002(BookNo@1102155000 : Code[20]);
    BEGIN
      // Start 03.AJAX
      IF BookRec.GET(BookNo) THEN BEGIN
        LibrarySetup.RESET;
        LibrarySetup.GET;
        ItemRec."No." := BookRec."No.";
        ItemRec.Description := BookRec."Book Name";
        ItemRec."Base Unit of Measure" := LibrarySetup."Base Unit of Measure";
        ItemRec."Unit Price" := BookRec."Unit Cost";
        ItemRec.VALIDATE("Item Category Code",LibrarySetup."Item Category Code");
        ItemRec.INSERT;
        MESSAGE(Text009);
      END;
      // Stop 03.AJAX
    END;

    PROCEDURE "AccNo Creation"@1102155003(BookNo@1102155000 : Code[20];StartAccNo@1102159000 : Code[20];Qty@1102159001 : Integer;PurchDate@1000000000 : Date);
    BEGIN
      // Start 04.AJAX

      LibrarySetup.GET;

      ItemRec.RESET;
      //ItemRec.SETCURRENTKEY("No.","Item Category Code");
      ItemRec.SETRANGE("No.",BookNo);
      ItemRec.SETRANGE("Item Category Code",LibrarySetup."Item Category Code");
      IF ItemRec.FINDFIRST THEN BEGIN

        AccessionRec.INIT;
        //AccessionRec.SETCURRENTKEY("Book No.");
        //AccessionRec.SETRANGE("Book No.",BookNo);
        IF AccessionRec.FINDFIRST THEN
          FOR i := 1 TO Qty DO BEGIN
            IF i = 1 THEN
            BEGIN
              AccessionRec."Accession No." :=  StartAccNo;
               StartAccNo := AccessionRec."Accession No.";
            END ELSE
            BEGIN
              AccessionRec."Accession No." := INCSTR(StartAccNo);
              StartAccNo := AccessionRec."Accession No.";
            END;
            AccessionRec."Date of Purchase" := PurchDate;
            AccessionRec.VALIDATE("Book No.",BookNo);
            AccessionRec.INSERT;
          END;
      END;
      // Stop 04.AJAX
    END;

    PROCEDURE "Advance Book"@1102155004(BookingNo@1102155000 : Code[20]);
    BEGIN
      // Start 05.AJAX
      IF AdvBook.GET(BookingNo) THEN BEGIN
        AccessionRec.RESET;
        AccessionRec.SETRANGE("Book No.",AdvBook."Book No.");
        AccessionRec.SETRANGE("Advance Booked",FALSE);
        IF AccessionRec.FINDSET THEN BEGIN
          AccessionRec.Type := AdvBook.Type;
          AccessionRec."Booked By" := AdvBook."No.";
          AccessionRec."Advance Booked" := TRUE;
          AccessionRec.MODIFY;
          AdvBook.Booked := TRUE;
          AdvBook."Accession No." := AccessionRec."Accession No.";
          AdvBook.MODIFY;
          IF GUIALLOWED THEN
            MESSAGE(Text010);
        END;
      END;
      // Stop 05.AJAX
    END;

    PROCEDURE "Calculate Fine"@1102155005("getEntryNo."@1102155000 : Integer;getDate@1102155004 : Date) : Decimal;
    VAR
      BookTransaction@1102155001 : Record 71632;
      CountDays@1102155003 : Integer;
    BEGIN
      // Start 06.VIGNESH
      BookTransaction.GET("getEntryNo.");
      LibrarySetup.GET;

      IF getDate > BookTransaction."Date of Return" THEN
        CountDays := getDate - BookTransaction."Date of Return";
      // Calculating Fine amount for Students
      LibrarySetup.GET;
      IF BookTransaction.Type = BookTransaction.Type::Student THEN BEGIN
        IF LibrarySetup."Fine - Students" = 0 THEN
          ERROR(Text011);
        IF CountDays <> 0 THEN
          EXIT(LibrarySetup."Fine - Students" * CountDays)
        ELSE
          EXIT(0);
      END ELSE
        IF BookTransaction.Type = BookTransaction.Type::Staff THEN BEGIN
          IF LibrarySetup."Fine - Staffs" = 0 THEN
            ERROR(Text012);
          IF CountDays <> 0 THEN
            EXIT(LibrarySetup."Fine - Staffs" * CountDays)
          ELSE
            EXIT(0);
        END;
      // Stop 06.VIGNESH
    END;

    PROCEDURE "Pay Fine"@1102155006("getEntryNo."@1102155000 : Integer);
    VAR
      FeeManagement@1102155002 : Codeunit 71044;
      FeeManagementCOLLEGE@1102155003 : Codeunit 71357;
      BookTransaction@1102155005 : Record 71632;
      "LocalInvoiceNo."@1102155006 : Code[20];
      FeeSetup@1102155007 : Record 71072;
      GenJournalLine@1102155008 : Record 81;
      FeeSetupCollege@1102155009 : Record 71387;
    BEGIN
      // Start 07.VIGNESH
      BookTransaction.GET("getEntryNo.");
      IF (BookTransaction."Fine Amount" <> 0) AND (NOT BookTransaction.Invoiced) THEN BEGIN
        IF BookTransaction."Invoice No." <> '' THEN
          ERROR(Text013);
        LibrarySetup.GET;
        LibrarySetup.TESTFIELD("Fine Code");
      // Post Through Sales Order
        {
        EducationSetup.GET;
        IF EducationSetup.Company = EducationSetup.Company::School THEN BEGIN
          BookTransaction."Invoice No." :=
            FeeManagement."Post Sales"(BookTransaction."No.",LibrarySetup."Fine Code",BookTransaction."Fine Amount");
        END ELSE
          IF EducationSetup.Company = EducationSetup.Company::College THEN
            BookTransaction."Invoice No." := FeeManagementCOLLEGE."Post Sales"(BookTransaction."No.",LibrarySetup."Fine Code",
            BookTransaction."Fine Amount");
        IF BookTransaction."Invoice No." <> '' THEN
          BookTransaction.Invoiced := TRUE;
        BookTransaction.MODIFY;
        }
      // Post Through Journal Line
        EducationSetup.GET;
        IF EducationSetup.Company = EducationSetup.Company::School THEN BEGIN
          FeeManagement.FeeProcess(BookTransaction."No.",LibrarySetup."Fine Code",BookTransaction."Fine Amount");
          FeeSetup.GET;
          FeeSetup.TESTFIELD("Journal Template Name");
          FeeSetup.TESTFIELD("Journal Batch Name");
        END ELSE
          IF EducationSetup.Company = EducationSetup.Company::College THEN BEGIN
            FeeManagementCOLLEGE.FeeProcess(BookTransaction."No.",LibrarySetup."Fine Code",BookTransaction."Fine Amount");
            //Start 10.Ankesh
            FeeSetupCollege.GET;
            FeeSetupCollege.TESTFIELD("Journal Template Name");
            FeeSetupCollege.TESTFIELD("Journal Batch Name");
            // Stop 10.Ankesh
          END;
        GenJournalLine.RESET;
        GenJournalLine.SETRANGE("Journal Template Name",FeeSetup."Journal Template Name");
        GenJournalLine.SETRANGE("Journal Batch Name",FeeSetup."Journal Batch Name");
        IF GenJournalLine.FINDSET THEN BEGIN
          "LocalInvoiceNo." := GenJournalLine."Document No.";
          CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post Batch",GenJournalLine);
        END;
        IF "LocalInvoiceNo." <> '' THEN
          BookTransaction."Invoice No." := "LocalInvoiceNo.";
        BookTransaction.Invoiced := TRUE;
        BookTransaction.MODIFY;
        MESSAGE(Text014);
      END;
      // Stop 07.VIGNESH
    END;

    PROCEDURE "Book Renewal"@1102155007("EntryNo."@1102155000 : Integer);
    VAR
      BookTransaction@1102155001 : Record 71632;
      BookTransaction1@1102155002 : Record 71632;
      IntEligible@1102155005 : Integer;
      IntRenewal@1102155006 : Integer;
    BEGIN
      // Start 11.ABK
      BookTransaction.GET("EntryNo.");
      BEGIN
        IntEligible := 0;
        IntRenewal := 0;
        IF BookTransaction.Type = BookTransaction.Type::Student THEN
          IF StudentCOLLEGE.GET(BookTransaction."No.") THEN
            IF LibrarySetupCourseWise.GET(StudentCOLLEGE."Course Code") THEN
              IntEligible := LibrarySetupCourseWise."No. of Renewal - Students";
        IF IntEligible = 0 THEN
          ERROR(Text015);

        BookTransaction1.RESET;
        BookTransaction1.SETRANGE("No.",BookTransaction."No.");
        BookTransaction1.SETRANGE("Accession No.",BookTransaction."Accession No.");
        BookTransaction1.SETRANGE("Entry Type",BookTransaction1."Entry Type"::Renewal);
        IntRenewal := BookTransaction1.COUNT;
        IF IntRenewal >= IntEligible THEN
          ERROR(Text016);
      END;
      // Stop 11.ABK
      // Start 08. VANDHANA
      BookTransaction.GET("EntryNo.");
      BEGIN
        BookTransaction."Transaction Status" := BookTransaction."Transaction Status"::Returned;
        BookTransaction."Actual Date of Return" := WORKDATE;
        BookTransaction.MODIFY;
        BookTransaction1.INIT;
        BookTransaction1.Type := BookTransaction.Type;
        BookTransaction1."Entry Type" := BookTransaction1."Entry Type"::Renewal;
        BookTransaction1.VALIDATE("No.",BookTransaction."No.");
        BookTransaction1.Name := BookTransaction.Name;
        BookTransaction1."Accession No." := BookTransaction."Accession No.";
        BookTransaction1."Book No." := BookTransaction."Book No.";
        BookTransaction1."Book Name" := BookTransaction."Book Name";
        BookTransaction1."Date of Issue" := WORKDATE;
        BookTransaction1."User ID" := BookTransaction."User ID";
        BookTransaction1."Transaction Status" := BookTransaction1."Transaction Status"::Issued;
        BookTransaction1."Renewal Entry No." := BookTransaction."Entry No.";
        BookTransaction1.INSERT(TRUE);
        MESSAGE(Text017);
      END;
      // Stop 08. VANDHANA
    END;

    PROCEDURE "Book Availablity"@1102155008(BookNo@1102155000 : Code[20]) Ret : ARRAY [2] OF Boolean;
    VAR
      Book@1102155001 : Record 71630;
      BookAccession@1102155002 : Record 71631;
    BEGIN
    END;

    BEGIN
    {

      No   Date      Sign      Trigger          Description
      -----------------------------------------------------------------------------------------------
      01  18.09.2009  AJAX     Book Issue        Code to change the Status of Book as Issued
      02  19.09.2009  AJAX     Book Return       Code to change the Status of Book as Returned and check for fine if its returned
                                               after the due date.
      03  23.09.2009  AJAX     Book Creation     Code to create Book as Item
      04  25.09.2009  AJAX     AccNo Creation    Code to create AccNo for the Books Purchased
      05  26.09.2009  AJAX     Advance Book      Code to do Advance Booking for the Book
      07  13.10.09    VIGNESH  Calculate Fine()  Code added to calculate the Fine amount
      08  13.10.09    VIGNESH  Pay Fine()        Code added to pay the Fine
      08  16.10.2009  VANDHANA Book Renewal      Code to renewal the Book.
      09  22.02.10    GUNA     Book Issue        Code written to change the booked status in Book Accession.
      10  22.02.10    Ankesh   Pay Fine()        Code written to get the fee setup detail for college.
      11  12.03.10    ABK   Book Renewal()       Code added to check the maximum renewals.
    }
    END.
  }
}

